export function base64Map(bit: string) {
  switch (bit) {
    case '000000':
      return 'A'
    case '000001':
      return 'B'
    case '000010':
      return 'C'
    case '000011':
      return 'D'
    case '000100':
      return 'E'
    case '000101':
      return 'F'
    case '000110':
      return 'G'
    case '000111':
      return 'H'
    case '001000':
      return 'I'
    case '001001':
      return 'J'
    case '001010':
      return 'K'
    case '001011':
      return 'L'
    case '001100':
      return 'M'
    case '001101':
      return 'N'
    case '001110':
      return 'O'
    case '001111':
      return 'P'
    case '010000':
      return 'Q'
    case '010001':
      return 'R'
    case '010010':
      return 'S'
    case '010011':
      return 'T'
    case '010100':
      return 'U'
    case '010101':
      return 'V'
    case '010110':
      return 'W'
    case '010111':
      return 'X'
    case '011000':
      return 'Y'
    case '011001':
      return 'Z'
    case '011010':
      return 'a'
    case '011011':
      return 'b'
    case '011100':
      return 'c'
    case '011101':
      return 'd'
    case '011110':
      return 'e'
    case '011111':
      return 'f'
    case '100000':
      return 'g'
    case '100001':
      return 'h'
    case '100010':
      return 'i'
    case '100011':
      return 'j'
    case '100100':
      return 'k'
    case '100101':
      return 'l'
    case '100110':
      return 'm'
    case '100111':
      return 'n'
    case '101000':
      return 'o'
    case '101001':
      return 'p'
    case '101010':
      return 'q'
    case '101011':
      return 'r'
    case '101100':
      return 's'
    case '101101':
      return 't'
    case '101110':
      return 'u'
    case '101111':
      return 'v'
    case '110000':
      return 'w'
    case '110001':
      return 'x'
    case '110010':
      return 'y'
    case '110011':
      return 'z'
    case '110100':
      return '0'
    case '110101':
      return '1'
    case '110110':
      return '2'
    case '110111':
      return '3'
    case '111000':
      return '4'
    case '111001':
      return '5'
    case '111010':
      return '6'
    case '111011':
      return '7'
    case '111100':
      return '8'
    case '111101':
      return '9'
    case '111110':
      return '+'
    case '111111':
      return '/'
    default:
      throw Error(`invalid bits, ${bit}`)
  }
}

export function base64UrlMap(bit: string) {
  switch (bit) {
    case '000000':
      return 'A'
    case '000001':
      return 'B'
    case '000010':
      return 'C'
    case '000011':
      return 'D'
    case '000100':
      return 'E'
    case '000101':
      return 'F'
    case '000110':
      return 'G'
    case '000111':
      return 'H'
    case '001000':
      return 'I'
    case '001001':
      return 'J'
    case '001010':
      return 'K'
    case '001011':
      return 'L'
    case '001100':
      return 'M'
    case '001101':
      return 'N'
    case '001110':
      return 'O'
    case '001111':
      return 'P'
    case '010000':
      return 'Q'
    case '010001':
      return 'R'
    case '010010':
      return 'S'
    case '010011':
      return 'T'
    case '010100':
      return 'U'
    case '010101':
      return 'V'
    case '010110':
      return 'W'
    case '010111':
      return 'X'
    case '011000':
      return 'Y'
    case '011001':
      return 'Z'
    case '011010':
      return 'a'
    case '011011':
      return 'b'
    case '011100':
      return 'c'
    case '011101':
      return 'd'
    case '011110':
      return 'e'
    case '011111':
      return 'f'
    case '100000':
      return 'g'
    case '100001':
      return 'h'
    case '100010':
      return 'i'
    case '100011':
      return 'j'
    case '100100':
      return 'k'
    case '100101':
      return 'l'
    case '100110':
      return 'm'
    case '100111':
      return 'n'
    case '101000':
      return 'o'
    case '101001':
      return 'p'
    case '101010':
      return 'q'
    case '101011':
      return 'r'
    case '101100':
      return 's'
    case '101101':
      return 't'
    case '101110':
      return 'u'
    case '101111':
      return 'v'
    case '110000':
      return 'w'
    case '110001':
      return 'x'
    case '110010':
      return 'y'
    case '110011':
      return 'z'
    case '110100':
      return '0'
    case '110101':
      return '1'
    case '110110':
      return '2'
    case '110111':
      return '3'
    case '111000':
      return '4'
    case '111001':
      return '5'
    case '111010':
      return '6'
    case '111011':
      return '7'
    case '111100':
      return '8'
    case '111101':
      return '9'
    case '111110':
      return '-'
    case '111111':
      return '_'
    default:
      throw Error(`invalid bits, ${bit}`)
  }
}

// for (let i = 0; i < 64; i++) {
//   const bit8 = numToBitString8(i)
//   const bit6 = bit8.substring(2)
//   console.log(`${bit6}: ${base64UrlMap(bit6)}`)
// }

export function base64MapReverse(base64Char: string) {
  switch (base64Char) {
    case 'A':
      return '000000'
    case 'B':
      return '000001'
    case 'C':
      return '000010'
    case 'D':
      return '000011'
    case 'E':
      return '000100'
    case 'F':
      return '000101'
    case 'G':
      return '000110'
    case 'H':
      return '000111'
    case 'I':
      return '001000'
    case 'J':
      return '001001'
    case 'K':
      return '001010'
    case 'L':
      return '001011'
    case 'M':
      return '001100'
    case 'N':
      return '001101'
    case 'O':
      return '001110'
    case 'P':
      return '001111'
    case 'Q':
      return '010000'
    case 'R':
      return '010001'
    case 'S':
      return '010010'
    case 'T':
      return '010011'
    case 'U':
      return '010100'
    case 'V':
      return '010101'
    case 'W':
      return '010110'
    case 'X':
      return '010111'
    case 'Y':
      return '011000'
    case 'Z':
      return '011001'
    case 'a':
      return '011010'
    case 'b':
      return '011011'
    case 'c':
      return '011100'
    case 'd':
      return '011101'
    case 'e':
      return '011110'
    case 'f':
      return '011111'
    case 'g':
      return '100000'
    case 'h':
      return '100001'
    case 'i':
      return '100010'
    case 'j':
      return '100011'
    case 'k':
      return '100100'
    case 'l':
      return '100101'
    case 'm':
      return '100110'
    case 'n':
      return '100111'
    case 'o':
      return '101000'
    case 'p':
      return '101001'
    case 'q':
      return '101010'
    case 'r':
      return '101011'
    case 's':
      return '101100'
    case 't':
      return '101101'
    case 'u':
      return '101110'
    case 'v':
      return '101111'
    case 'w':
      return '110000'
    case 'x':
      return '110001'
    case 'y':
      return '110010'
    case 'z':
      return '110011'
    case '0':
      return '110100'
    case '1':
      return '110101'
    case '2':
      return '110110'
    case '3':
      return '110111'
    case '4':
      return '111000'
    case '5':
      return '111001'
    case '6':
      return '111010'
    case '7':
      return '111011'
    case '8':
      return '111100'
    case '9':
      return '111101'
    case '+':
      return '111110'
    case '/':
      return '111111'
    default:
      throw Error(`invalid character, ${base64Char}`)
  }
}

export function base64MapUrlReverse(base64UrlChar: string) {
  switch (base64UrlChar) {
    case 'A':
      return '000000'
    case 'B':
      return '000001'
    case 'C':
      return '000010'
    case 'D':
      return '000011'
    case 'E':
      return '000100'
    case 'F':
      return '000101'
    case 'G':
      return '000110'
    case 'H':
      return '000111'
    case 'I':
      return '001000'
    case 'J':
      return '001001'
    case 'K':
      return '001010'
    case 'L':
      return '001011'
    case 'M':
      return '001100'
    case 'N':
      return '001101'
    case 'O':
      return '001110'
    case 'P':
      return '001111'
    case 'Q':
      return '010000'
    case 'R':
      return '010001'
    case 'S':
      return '010010'
    case 'T':
      return '010011'
    case 'U':
      return '010100'
    case 'V':
      return '010101'
    case 'W':
      return '010110'
    case 'X':
      return '010111'
    case 'Y':
      return '011000'
    case 'Z':
      return '011001'
    case 'a':
      return '011010'
    case 'b':
      return '011011'
    case 'c':
      return '011100'
    case 'd':
      return '011101'
    case 'e':
      return '011110'
    case 'f':
      return '011111'
    case 'g':
      return '100000'
    case 'h':
      return '100001'
    case 'i':
      return '100010'
    case 'j':
      return '100011'
    case 'k':
      return '100100'
    case 'l':
      return '100101'
    case 'm':
      return '100110'
    case 'n':
      return '100111'
    case 'o':
      return '101000'
    case 'p':
      return '101001'
    case 'q':
      return '101010'
    case 'r':
      return '101011'
    case 's':
      return '101100'
    case 't':
      return '101101'
    case 'u':
      return '101110'
    case 'v':
      return '101111'
    case 'w':
      return '110000'
    case 'x':
      return '110001'
    case 'y':
      return '110010'
    case 'z':
      return '110011'
    case '0':
      return '110100'
    case '1':
      return '110101'
    case '2':
      return '110110'
    case '3':
      return '110111'
    case '4':
      return '111000'
    case '5':
      return '111001'
    case '6':
      return '111010'
    case '7':
      return '111011'
    case '8':
      return '111100'
    case '9':
      return '111101'
    case '-':
      return '111110'
    case '_':
      return '111111'
    default:
      throw Error(`invalid character, ${base64UrlChar}`)
  }
}
